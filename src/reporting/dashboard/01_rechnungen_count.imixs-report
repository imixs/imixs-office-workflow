<?xml version="1.0" encoding="UTF-8" standalone="yes"?><document xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><item name="attributes"><value xsi:type="xmlItem"><value xsi:type="xs:string">$created</value><value xsi:type="xs:string"></value><value xsi:type="xs:string"></value><value xsi:type="xs:string"></value><value xsi:type="xs:string"></value></value><value xsi:type="xmlItem"><value xsi:type="xs:string">txtworkflowstatus</value><value xsi:type="xs:string"></value><value xsi:type="xs:string"></value><value xsi:type="xs:string"></value><value xsi:type="xs:string"></value></value><value xsi:type="xmlItem"><value xsi:type="xs:string">txtworkflowsummary</value><value xsi:type="xs:string"></value><value xsi:type="xs:string"></value><value xsi:type="xs:string"></value><value xsi:type="xs:string"></value></value><value xsi:type="xmlItem"><value xsi:type="xs:string">invoice.number</value><value xsi:type="xs:string"></value><value xsi:type="xs:string"></value><value xsi:type="xs:string"></value><value xsi:type="xs:string"></value></value><value xsi:type="xmlItem"><value xsi:type="xs:string">invoice.date</value><value xsi:type="xs:string"></value><value xsi:type="xs:string"></value><value xsi:type="xs:string">&lt;format&gt;yyyy-MM&lt;/format&gt;</value><value xsi:type="xs:string"></value></value><value xsi:type="xmlItem"><value xsi:type="xs:string">invoice.total</value><value xsi:type="xs:string"></value><value xsi:type="xs:string">DOUBLE</value><value xsi:type="xs:string"></value><value xsi:type="xs:string"></value></value><value xsi:type="xmlItem"><value xsi:type="xs:string">_tax</value><value xsi:type="xs:string"></value><value xsi:type="xs:string"></value><value xsi:type="xs:string"></value><value xsi:type="xs:string"></value></value><value xsi:type="xmlItem"><value xsi:type="xs:string">_amount_brutto</value><value xsi:type="xs:string"></value><value xsi:type="xs:string"></value><value xsi:type="xs:string"></value><value xsi:type="xs:string"></value></value><value xsi:type="xmlItem"><value xsi:type="xs:string">txtworkflowgroup</value><value xsi:type="xs:string"></value><value xsi:type="xs:string"></value><value xsi:type="xs:string"></value><value xsi:type="xs:string"></value></value></item><item name="contenttype"><value xsi:type="xs:string">application/xml</value></item><item name="txtdescription"><value xsi:type="xs:string">Darstellungen Rechnungen im Chart Diagram </value></item><item name="txtname"><value xsi:type="xs:string">01_rechnungen_count</value></item><item name="txtquery"><value xsi:type="xs:string">(type:"workitem" OR type:"workitemarchive")   
AND ($workflowgroup:"Rechnungseingang")  
AND ($created:[&lt;date DAY_OF_MONTH="1" ADD="MONTH,-6" /&gt; TO &lt;date ADD="MONTH,1" DAY_OF_MONTH="1" /&gt;])</value></item><item name="xsl"><value xsi:type="xs:string">&lt;?xml version="1.0" encoding="UTF-8" ?&gt;&lt;xsl:stylesheet xmlns="http://www.w3.org/1999/xhtml"	xmlns:xsl="http://www.w3.org/1999/XSL/Transform" version="1.0"&gt;	&lt;xsl:output method="text" indent="no" encoding="ISO-8859-1" 		omit-xml-declaration="yes" /&gt;	&lt;xsl:strip-space elements="*" /&gt;	&lt;xsl:key name="groups" match="/data/document"		use="item[@name='invoice.date']/value" /&gt;	&lt;xsl:template match="/"&gt;		{			"type" : "line",			"title" : "Rechnungsausgaenge",		    "options" : { 		    				"responsive": true		    			},			"labels" : [						&lt;!--Select the first element of each group --&gt;						&lt;xsl:for-each select="/data/document[generate-id() =generate-id(key('groups', item[@name='invoice.date']/value)[1])]" &gt;							&lt;xsl:sort select="item[@name='invoice.date']/value" data-type="text" order="ascending"/&gt;							&lt;xsl:text&gt;&lt;![CDATA["]]&gt;&lt;/xsl:text&gt;&lt;xsl:value-of select="item[@name='invoice.date']/value" /&gt;&lt;xsl:text&gt;&lt;![CDATA["]]&gt;&lt;/xsl:text&gt;							&lt;!-- comma separator only if not last one --&gt;							&lt;xsl:if test="position() != last()" &gt;&lt;xsl:text&gt;&lt;![CDATA[,]]&gt;&lt;/xsl:text&gt;&lt;/xsl:if&gt;						&lt;/xsl:for-each&gt;					 ],			"datasets" : [			{				"label": "Anzahl",				"fillColor" : "rgba(220,220,220,0.2)",				"strokeColor" : "rgba(220,220,220,1)",				"pointColor" : "rgba(220,220,220,1)",				"pointStrokeColor" : "#fff",				"pointHighlightFill" : "#fff",				"pointHighlightStroke" : "rgba(220,220,220,1)",				"data" : [			&lt;xsl:apply-templates					select="/data/document[generate-id() = generate-id(key('groups', item[@name='invoice.date']/value)[1])]" &gt;					&lt;!-- sort --&gt;					&lt;xsl:sort select="item[@name='invoice.date']/value" data-type="text" order="ascending"/&gt;			&lt;/xsl:apply-templates&gt;				]			}			]		}	&lt;/xsl:template&gt;	&lt;!-- This template builds a JSON array with sum of '_amount' over all groups --&gt;	&lt;xsl:template match="/data/document"&gt;					&lt;!-- build sum variable --&gt;		&lt;xsl:variable name="summe"			select="count(key('groups', item[@name='invoice.date']/value)//item[@name='invoice.total']/value)"/&gt;						&lt;!-- output sum  --&gt;			&lt;xsl:choose&gt; 			  &lt;!-- test if NaN --&gt;			  &lt;xsl:when test="not(number($summe))"&gt;			      &lt;!-- myNode is a not a number or empty(NaN) or zero --&gt;  			      &lt;xsl:text&gt;&lt;![CDATA[0]]&gt;&lt;/xsl:text&gt;   			  &lt;/xsl:when&gt;			  &lt;xsl:otherwise&gt;			      &lt;!-- myNode is a number (!= zero) --&gt;     			      &lt;xsl:value-of select="$summe" /&gt;   			  &lt;/xsl:otherwise&gt;			&lt;/xsl:choose&gt;			&lt;!-- comma separator only if not last one --&gt;			&lt;xsl:if test="position() != last()" &gt;&lt;xsl:text&gt;&lt;![CDATA[,]]&gt;&lt;/xsl:text&gt;&lt;/xsl:if&gt;	&lt;/xsl:template&gt;&lt;/xsl:stylesheet&gt;</value></item><item name="xslresource"><value xsi:type="xs:string">/imixs-office-workflow/src/reporting/dashboard/01_rechnungen_count.xslt</value></item></document>