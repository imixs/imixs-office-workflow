<ui:composition xmlns="http://www.w3.org/1999/xhtml"
	xmlns:f="http://xmlns.jcp.org/jsf/core"
	xmlns:h="http://xmlns.jcp.org/jsf/html"
	xmlns:c="http://xmlns.jcp.org/jsp/jstl/core"
	xmlns:ui="http://xmlns.jcp.org/jsf/facelets"
	xmlns:pt="http://xmlns.jcp.org/jsf/passthrough"
	xmlns:marty="http://xmlns.jcp.org/jsf/composite/marty"
	xmlns:i="http://xmlns.jcp.org/jsf/composite/imixs">

	<!-- Imixs-ML integration
	
		This subform is loaded by the workitem.xhtml page if the MLController is available.
		The subform loads the current ml status into a json object 'ml_json' and provides a
		jsf commandScript for a suggestion list 
		
		In addition the subform includes a jsf commandScript which calls the mlController.serach method in the backend.
		The result list of this search is displayed in the current input field. All this is controlled by java script
		form the imixs-ml.js library!

	-->
	
	<script type="text/javascript"
		src="#{facesContext.externalContext.requestContextPath}/js/imixs-ml.js?build=#{app.application_build_timestamp}"></script>
	<script type="text/javascript">
		/*<![CDATA[*/

			// set ml status
			imixsOfficeML.mlResult = #{mlController.getMLResult()};

		/*]]>*/
	</script>
		
		
	<!-- 
		see:
		https://stackoverflow.com/questions/16588327/how-to-invoke-a-jsf-managed-bean-on-a-html-dom-event-using-native-javascript
		https://dzone.com/articles/execute-a-jsf-ajax-request-by-just-a-function-call
		https://www.w3schools.com/howto/howto_js_autocomplete.asp
	 -->
  		<h:commandScript name="imixsOfficeML.mlSearch" action="#{mlController.search()}" 
  			rendered="#{mlController!=null}" render="ml-search-results" onevent="showMLSearchResult" />
	
		<h:panelGroup id="ml-search-results" layout="block" class="ml-search-results">

			<ui:repeat var="suggest" value="#{mlController.searchResult}">

				<div class="ml-search-results-element">
					<a href="javascript:void(0)" onclick="selectMLSearchResultEntry('#{suggest}')">
						<h:outputText value="#{suggest}" escape="false" />
					</a>
				</div>
			</ui:repeat>
		</h:panelGroup>
						
			

				
</ui:composition>


