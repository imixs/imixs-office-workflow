<ui:composition xmlns="http://www.w3.org/1999/xhtml" xmlns:ui="http://xmlns.jcp.org/jsf/facelets"
	xmlns:f="http://xmlns.jcp.org/jsf/core" xmlns:c="http://xmlns.jcp.org/jsp/jstl/core"
	xmlns:h="http://xmlns.jcp.org/jsf/html" xmlns:i="http://xmlns.jcp.org/jsf/composite/imixs"
	xmlns:pt="http://xmlns.jcp.org/jsf/passthrough" xmlns:marty="http://xmlns.jcp.org/jsf/composite/marty">

	<c:forEach items="#{customFormSections}" var="section">
		<c:if test="#{! empty section.label}">
			<h3>#{section.label}</h3>
		</c:if>

		<ui:remove><!-- test if custom form section --></ui:remove>
		<c:if test="#{! empty section.path}">
			<ui:include src="/pages/workitems/forms/#{section.path}.xhtml">
				<ui:param name="workitem" value="#{workitem}" />
				<ui:param name="readonly" value="#{section.readonly}" />
			</ui:include>
		</c:if>

		<ui:remove><!-- standard form section --></ui:remove>
		<c:if test="#{empty section.path}">
			<div class="imixs-form-section-flex">

				<c:forEach items="#{section.items}" var="item">
					<c:if test="#{!item.hide}">
						<dl style="grid-column-start: span #{item.span};"
							class="#{item.readonly?'imixs-readonly':'imixs-edit'}">
							<dt>
								#{item.label}
								<c:if test="#{item.required}">
									<span class="imixs-required"> *</span>
								</c:if>
							</dt>
							<dd>
								<ui:remove><!-- text --></ui:remove>
								<c:if test="#{item.type eq 'text'}">
									<h:inputText value="#{workitem.item[item.name]}" pt:data-item="#{item.name}"
										required="#{item.required?validationController.required:false}"
										rendered="#{!item.readonly}" disabled="#{item.disabled}" />
									<h:outputText value="#{workitem.item[item.name]}" rendered="#{item.readonly}" />
								</c:if>

								<ui:remove><!-- number --></ui:remove>
								<c:if test="#{item.type eq 'number'}">
									<h:inputText value="#{workitem.item[item.name]}" pt:data-item="#{item.name}"
										required="#{item.required?validationController.required:false}"
										rendered="#{!item.readonly}" disabled="#{item.disabled}">
										<f:convertNumber />
									</h:inputText>
									<h:outputText value="#{workitem.item[item.name]}" rendered="#{item.readonly}">
										<f:convertNumber />
									</h:outputText>
								</c:if>

								<ui:remove><!-- currency --></ui:remove>
								<c:if test="#{item.type eq 'currency'}">
									<h:inputText value="#{workitem.item[item.name]}" pt:data-item="#{item.name}"
										required="#{item.required?validationController.required:false}"
										rendered="#{!item.readonly}" disabled="#{item.disabled}">
										<f:convertNumber minFractionDigits="2" locale="de" />
									</h:inputText>
									<h:outputText value="#{workitem.item[item.name]}" rendered="#{item.readonly}">
										<f:convertNumber minFractionDigits="2" locale="de" />
									</h:outputText>
								</c:if>

								<ui:remove><!-- date --></ui:remove>
								<c:if test="#{item.type eq 'date'}">
									<h:inputText value="#{workitem.item[item.name]}" pt:data-item="#{item.name}"
										required="#{item.required?validationController.required:false}"
										styleClass="imixs-date" rendered="#{!item.readonly}"
										disabled="#{item.disabled}">
										<f:converter converterId="imixsDateConverter" />
										<f:attribute name="org.imixs.date.pattern"
											value="#{message.datePatternShort}" />
										<f:attribute name="org.imixs.date.timeZone" value="#{message.timeZone}" />
									</h:inputText>
									<h:outputText value="#{workitem.item[item.name]}" rendered="#{item.readonly}">
										<f:convertDateTime pattern="#{message.datePatternShort}"
											timeZone="#{message.timeZone}" />
									</h:outputText>
								</c:if>

								<ui:remove><!-- html5-date --></ui:remove>
								<c:if test="#{item.type eq 'html5date'}">
									<h:inputText value="#{workitem.item[item.name]}" pt:type="date"
										pt:data-item="#{item.name}"
										required="#{item.required?validationController.required:false}"
										styleClass="imixs-html5date" rendered="#{!item.readonly}"
										disabled="#{item.disabled}">
										<f:converter converterId="imixsHTML5DateConverter" />
									</h:inputText>
									<h:outputText value="#{workitem.item[item.name]}" rendered="#{item.readonly}">
										<f:convertDateTime pattern="#{message.datePatternShort}"
											timeZone="#{message.timeZone}" />
									</h:outputText>
								</c:if>


								<ui:remove><!-- html5-datetime --></ui:remove>
								<c:if test="#{item.type eq 'html5datetime'}">
									<h:inputText value="#{workitem.item[item.name]}" pt:type="datetime"
										pt:data-item="#{item.name}"
										required="#{item.required?validationController.required:false}"
										styleClass="imixs-html5date" rendered="#{!item.readonly}"
										disabled="#{item.disabled}">
										<f:converter converterId="imixsHTML5DateConverter" />
									</h:inputText>
									<h:outputText value="#{workitem.item[item.name]}" rendered="#{item.readonly}">
										<f:convertDateTime pattern="#{message.datePatternShort}"
											timeZone="#{message.timeZone}" />
									</h:outputText>
								</c:if>

								<ui:remove><!-- text area --></ui:remove>
								<c:if test="#{item.type eq 'textarea'}">
									<h:inputTextarea value="#{workitem.item[item.name]}" pt:data-item="#{item.name}"
										required="#{item.required?validationController.required:false}"
										rendered="#{!item.readonly}" disabled="#{item.disabled}" />
									<h:outputText escape="true" value="#{workitem.item[item.name]}"
										rendered="#{item.readonly}" />
								</c:if>

								<ui:remove><!-- text list --></ui:remove>
								<c:if test="#{item.type eq 'textlist'}">
									<h:inputTextarea value="#{workitem.itemList[item.name]}" pt:data-item="#{item.name}"
										required="#{item.required?validationController.required:false}"
										rendered="#{!item.readonly}" disabled="#{item.disabled}"
										converter="org.imixs.VectorConverter" />
									<ui:fragment rendered="#{item.readonly}">
										<ui:repeat var="itemvalue" value="#{workitem.itemList[item.name]}">
											<h:outputText value="#{itemvalue}"></h:outputText>
											<br />
										</ui:repeat>
									</ui:fragment>
								</c:if>

								<ui:remove><!-- html --></ui:remove>
								<c:if test="#{item.type eq 'html'}">
									<h:inputTextarea required="#{item.required?validationController.required:false}"
										pt:data-item="#{item.name}" class="imixs-editor-basic"
										value="#{workitem.item[item.name]}" rendered="#{!item.readonly}" />
									<h:outputText escape="false" value="#{workitem.item[item.name]}"
										rendered="#{item.readonly}" />
								</c:if>

								<ui:remove><!-- Options List --></ui:remove>
								<c:if
									test="#{item.type eq 'selectBooleanCheckbox' or item.type eq 'selectOneMenu' or item.type eq 'selectOneRadio' or item.type eq 'selectManyCheckbox' or item.type eq 'selectManyCheckboxPageDirection' or item.type eq 'selectOneRadioPageDirection'}">
									<ui:fragment rendered="#{item.readonly}">
										<ui:repeat var="itemvalue" value="#{workitem.itemList[item.name]}">
											<c:if test="#{item.type eq 'selectBooleanCheckbox'}">
												<h:panelGroup rendered="#{itemvalue}"
													styleClass="typcn typcn-input-checked"
													style="font-size:1.2rem;margin-right: 5px;"></h:panelGroup>
												<h:panelGroup rendered="#{!itemvalue}"
													styleClass="typcn typcn-media-stop-outline"
													style="font-size:1.2rem;margin-right: 5px;"></h:panelGroup>
											</c:if>
											<c:if test="#{item.type ne 'selectBooleanCheckbox'}">
												<span class="typcn typcn-input-checked"
													style="font-size:1.2rem;margin-right: 5px;"></span>
												<h:outputText value="#{itemvalue}"></h:outputText>
											</c:if>
											<br />
										</ui:repeat>
									</ui:fragment>
									<ui:fragment rendered="#{!item.readonly}">
										<c:if test="#{item.type eq 'selectBooleanCheckbox'}">
											<h:selectBooleanCheckbox
												required="#{item.required?validationController.required:false}"
												pt:data-item="#{item.name}" disabled="#{item.disabled}"
												value="#{workitem.item[item.name]}">
											</h:selectBooleanCheckbox>
										</c:if>
										<c:if test="#{item.type eq 'selectOneMenu'}">
											<h:selectOneMenu
												required="#{item.required?validationController.required:false}"
												pt:data-item="#{item.name}" disabled="#{item.disabled}"
												value="#{workitem.item[item.name]}">
												<f:selectItems value="#{item.selectItems}" />
											</h:selectOneMenu>
										</c:if>
										<c:if test="#{item.type eq 'selectOneRadio'}">
											<h:selectOneRadio
												required="#{item.required?validationController.required:false}"
												pt:data-item="#{item.name}" disabled="#{item.disabled}"
												value="#{workitem.item[item.name]}">
												<f:selectItems value="#{item.selectItems}" />
											</h:selectOneRadio>
										</c:if>
										<c:if test="#{item.type eq 'selectOneRadioPageDirection'}">
											<h:selectOneRadio
												required="#{item.required?validationController.required:false}"
												pt:data-item="#{item.name}" layout="pageDirection"
												disabled="#{item.disabled}" value="#{workitem.item[item.name]}">
												<f:selectItems value="#{item.selectItems}" />
											</h:selectOneRadio>
										</c:if>
										<c:if test="#{item.type eq 'selectManyCheckbox'}">
											<h:selectManyCheckbox
												required="#{item.required?validationController.required:false}"
												pt:data-item="#{item.name}" disabled="#{item.disabled}"
												value="#{workitem.itemListArray[item.name]}">
												<f:selectItems value="#{item.selectItems}" />
											</h:selectManyCheckbox>
										</c:if>
										<c:if test="#{item.type eq 'selectManyCheckboxPageDirection'}">
											<h:selectManyCheckbox
												required="#{item.required?validationController.required:false}"
												pt:data-item="#{item.name}" layout="pageDirection"
												disabled="#{item.disabled}"
												value="#{workitem.itemListArray[item.name]}">
												<f:selectItems value="#{item.selectItems}" />
											</h:selectManyCheckbox>
										</c:if>
									</ui:fragment>
								</c:if>


								<ui:remove><!-- IBAN/BIC --></ui:remove>
								<c:if test="#{item.type eq 'iban'}">
									<h:inputText id="iban" value="#{workitem.item[item.name]}"
										pt:data-item="#{item.name}" onkeyup="imixsOfficeWorkitem.formatIBAN(this);"
										required="#{item.required?validationController.required:false}"
										rendered="#{!item.readonly}" disabled="#{item.disabled}">
										<f:validator validatorId="imixsIBANValidator" />
									</h:inputText>
									<span class="imixs-required">
										<h:message for="iban" />
									</span>
									<h:outputText value="#{workitem.item[item.name]}" rendered="#{item.readonly}" />
								</c:if>
								<c:if test="#{item.type eq 'bic'}">
									<h:inputText id="bic" value="#{workitem.item[item.name]}"
										pt:data-item="#{item.name}"
										required="#{item.required?validationController.required:false}"
										rendered="#{!item.readonly}" disabled="#{item.disabled}">
										<f:validator validatorId="imixsBICValidator" />
									</h:inputText>
									<span class="imixs-required">
										<h:message for="bic" />
									</span>
									<h:outputText value="#{workitem.item[item.name]}" rendered="#{item.readonly}" />
								</c:if>


								<ui:remove><!-- custom subview --></ui:remove>
								<c:if test="#{item.type eq 'custom'}">
									<ui:include src="/pages/workitems/parts/#{item.path}.xhtml">
										<ui:param name="workitem" value="#{workitem}" />
										<ui:param name="required" value="#{item.required}" />
										<ui:param name="readonly" value="#{item.readonly}" />
										<ui:param name="name" value="#{item.name}" />
										<ui:param name="options" value="#{item.options}" />
										<ui:param name="rendered" value="#{true}" />
									</ui:include>
								</c:if>
							</dd>
						</dl>
					</c:if>
				</c:forEach>
			</div>
		</c:if>

	</c:forEach>

</ui:composition>