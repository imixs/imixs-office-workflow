<?xml version="1.0" encoding="UTF-8"?>
<server description="new server">
	<!-- Enable features -->
	<featureManager>
		<feature>javaee-8.0</feature>
		<feature>microProfile-2.2</feature>
		<feature>javaMail-1.6</feature>
	</featureManager>
	
	<!--  -->
	<logging consoleLogLevel="INFO" />
	
	
	<logging traceSpecification="com.ibm.ws.*=audit"/>
	<logging traceSpecification="org.imixs.workflow.*=info"/>
	
	
<!--
	<logging traceSpecification="org.imixs.*=info"/>
-->
	<!-- This template enables security. To get the full use of all the capabilities, 
		a keystore and user registry are required. -->

	<!-- For the keystore, default keys are generated and stored in a keystore. 
		To provide the keystore password, generate an encoded password using bin/securityUtility 
		encode and add it below in the password attribute of the keyStore element. 
		Then uncomment the keyStore element. -->
	<!-- <keyStore password=""/> -->

	<!--For a user registry configuration, configure your user registry. For 
		example, configure a basic user registry using the basicRegistry element. 
		Specify your own user name below in the name attribute of the user element. 
		For the password, generate an encoded password using bin/securityUtility 
		encode and add it in the password attribute of the user element. Then uncomment 
		the user element. -->


	<basicRegistry id="basic" realm="imixsrealm">
		<user name="admin" password="adminadmin" />
		<user name="workflow-service"  password="xxxx" />  
		<user name="manfred" password="password" />
		<user name="alex" password="password" />
		<user name="anna" password="password" />
		<user name="marty" password="password" />
		<user name="melman" password="password" />
		<user name="gloria" password="password" />
		<user name="skipper" password="password" />
		<user name="kowalski" password="password" />
		<user name="private" password="password" />
		<user name="rico" password="password" />
	</basicRegistry>


	<!-- @RunAs see: 
		https://stackoverflow.com/questions/51830570/how-to-authorize-a-java-batch-job-so-it-can-run-from-a-startup-bean-in-websphere
		https://www.ibm.com/support/knowledgecenter/en/SSEQTP_liberty/com.ibm.websphere.wlp.doc/ae/twlp_sec_runas.html
		https://groups.io/g/openliberty/messages
		https://www.ibm.com/support/knowledgecenter/de/SS7K4U_liberty/com.ibm.websphere.wlp.zseries.doc/ae/cwlp_authorization.html

<applicationMonitor dropinsEnabled="false" />
	 -->
	
	
	
	  <!-- hot-deploy for dropins 
    <applicationMonitor updateTrigger="polled" pollingRate="500ms"
                    dropins="dropins" dropinsEnabled="true"/>
	-->
	<application name="imixs-documents"  context-root="/" type="war" 
		id="imixs-documents"
    	location="${server.config.dir}dropins/imixs-documents.war">
    
	    <application-bnd>
	        <security-role name="org.imixs.ACCESSLEVEL.MANAGERACCESS" >
	            <user name="workflow-service" />
	            <user name="admin" />
	            <run-as userid="workflow-service"/>
	        </security-role>
	        
	         <security-role name="org.imixs.ACCESSLEVEL.AUTHORACCESS" >
	            <user name="manfred"  />
				<user name="alex"  />
				<user name="anna" />
				<user name="marty"  />
				<user name="melman"  />
				<user name="gloria"  />
				<user name="skipper"  />
				<user name="kowalski"  />
				<user name="private" />
	        </security-role>
	    </application-bnd>
	</application>


	<!-- To access this server from a remote client add a host attribute to 
		the following element, e.g. host="*" -->
	<httpEndpoint id="defaultHttpEndpoint" httpPort="9080"
		httpsPort="9443" />

	<!-- Automatically expand WAR files and EAR files -->
	<applicationManager autoExpand="false" />


	<!-- JDBC PostgreSQL driver -->
	<library id="postgresql-library">
		<fileset id="PostgreSQLFileset" dir="/opt/ol/wlp/lib"
			includes="postgresql-9.4.1212.jar" />
	</library>
	<jdbcDriver id="postgresql-driver"
		javax.sql.XADataSource="org.postgresql.xa.PGXADataSource"
		javax.sql.ConnectionPoolDataSource="org.postgresql.ds.PGConnectionPoolDataSource"
		libraryRef="postgresql-library" />

	<!-- imxisworkflow datapool -->
	<dataSource id="imixsworkflow" jndiName="jdbc/office"
		jdbcDriverRef="postgresql-driver"
		type="javax.sql.ConnectionPoolDataSource" transactional="true">
		<properties serverName="db" portNumber="5432"
			databaseName="office" user="postgres" password="adminadmin" />
	</dataSource>


	<!-- timerdb psql -->
	<dataSource id="timerDataSource"
		jndiName="jdbc/timerDataSource" jdbcDriverRef="postgresql-driver"
		type="javax.sql.ConnectionPoolDataSource" transactional="false">
		<properties serverName="db" portNumber="5432"
			databaseName="office" user="postgres" password="adminadmin" />
	</dataSource>
	<databaseStore id="EJBTimerDatabaseStore"
		tablePrefix="EJBTIMER_" dataSourceRef="timerDataSource">
		<authData user="postgres" password="adminadmin" />
	</databaseStore>
	<persistentExecutor
		id="defaultEJBPersistentTimerExecutor" retryInterval="10s"
		retryLimit="10" taskStoreRef="EJBTimerDatabaseStore">
	</persistentExecutor>
	<library id="DerbyLib">
		<fileset dir="${server.config.dir}/derbyDriverDir/" />
	</library>

	<!--  Mail Config 
	<mailSession>
        <mailSessionID>imixsSMTPSession</mailSessionID>             
        <jndiName>mail/org.imixs.workflow.mail</jndiName>
        <description>Imixs SMTP Session</description>
        <storeProtocol>imaps</storeProtocol>
        <transportProtocol>smtp</transportProtocol>
        <host>my.host.com</host>
        <user>youruseraccount</user>
        <password>yourpassword</password>
        <from>youruseraccount@info.com</from>
        <property name="mail.imap.host" value="my.host.com" />
        <property name="mail.smtp.port" value="587" />
        <property name="mail.smtp.auth" value="true" />
        <property name="mail.smtp.starttls.enable" value="true" />
    </mailSession>
    -->
    
    
    
</server>
